version: '3.7'

services:
  backend:
    container_name: backend
    build: .
    env_file:
      - .production.env 
    ports:
      - 5000:5000
    depends_on:
      - postgres
    restart: always
    volumes:
      - .:/usr/src/app
    command: npm run start:prod
    networks:
      - starlink

  postgres:
    container_name: postgres
    image: postgres:16
    
    env_file:
      - .production.env  
    environment:
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /Users/Main/Desktop/dump-safes-202403151036:/var/lib/postgresql/dump-safes-202403151036
      # - /Users/Main/Desktop/dump-safes-202401260859:/var/lib/postgresql/dump-safes-202401260859
      # - /c/Users/PC/Desktop/dump-safes-202401260859:/var/lib/postgresql/dump-safes-202401260859
      # - /c/Users/PC/Desktop/dump-safes-202310020104:/var/lib/postgresql/dump-safes-202310020104
      # - /c/Users/PC/Desktop/restore-script.sh:/docker-entrypoint-initdb.d/restore-script.sh
    restart: always
    networks:
      - starlink

networks:
  starlink:
    name: starlink
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
volumes:
  pgdata: